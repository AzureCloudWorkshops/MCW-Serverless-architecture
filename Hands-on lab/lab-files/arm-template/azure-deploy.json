{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.3.0.0",
  "parameters": {
    "resourceSuffix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 5,
      "metadata": {
        "description": "Enter a three to five character alpha-numeric string, such as your initials, to ensure unique resource names."
      }
    },
    "vmUsername": {
      "defaultValue": "demouser",
      "type": "string",
      "metadata": {
        "description": "Administrator user name for logging into the Lab Virtual Machine."
      }
    },
    "vmPassword": {
      "defaultValue": "Password.1!!",
      "type": "securestring",
      "minLength": 8,
      "maxLength": 128,
      "metadata": {
        "description": "The password must be between 8 and 128 characters in length and must contain at least one number, one non-alphanumeric character, and one upper or lower case letter. Default value is Password.1!!"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",

    "dataLakeAccountName": "[concat('tollboothdl', parameters('resourceSuffix'))]",
    "dataLakeConnectionSecretName": "dataLakeConnectionString",
    "imagesContainerName": "images",
    "exportContainerName": "export",

    "cosmosDbAccountName": "[concat('tollbooth-db-', parameters('resourceSuffix'))]",
    "cosmosDbDatabaseName": "LicensePlates",
    "cosmosDbContainerProcessed": "Processed",
    "cosmosDbContainerManual": "NeedsManualReview",

    "cosmosDbAuthKeySecretName": "cosmosDBAuthorizationKey",

    "virtualNetworkName": "[concat(resourceGroup().name, '-vnet')]",
    "addressPrefix": "176.16.0.0/16",
    "subnetName": "default",
    "subnetPrefix": "176.16.0.0/24",

    "vmName": "LabVM",
    "vmSize": "Standard_D4s_v3",
    "vmNetworkSecurityGroupName": "[concat(variables('vmName'), '-nsg')]",
    "vmNetworkInterfaceName": "[concat(variables('vmName'), '-nic')]",
    "vmPublicIpAddressName": "[concat(variables('vmName'), '-ip')]",
    "vmCustomScriptFileName": "configure-labvm.ps1",
    "vmCustomScriptUri": "[concat('https://raw.githubusercontent.com/kylebunting/MCW-Serverless-architecture/master/Hands-on%20lab/lab-files/arm-template/', variables('vmCustomScriptFileName'))]",

    "tollBoothHostingPlanName": "tollbooth-asp",
    "tollBoothFunctionAppName": "[concat('TollBoothFunctionApp-', parameters('resourceSuffix'))]",
    "tollBoothEventsHostingPlanName": "tollboothevents-asp",
    "tollBoothEventsFunctionAppName": "[concat('TollBoothEvents-', parameters('resourceSuffix'))]",
    "tollBoothAppInsightsName": "[concat('tollbooth-monitor-', parameters('resourceSuffix'))]",

    "eventGridTopicName": "[concat('tollbooth-event-grid-', parameters('resourceSuffix'))]",
    "eventGridTopicKeySecretName": "eventGridTopicKey",

    "computerVisionName": "[concat('tollbooth-vision-', parameters('resourceSuffix'))]",
    "computerVisionSecretName": "computerVisionApiKey",
    "keyVaultName": "[concat('tollbooth-kv-', parameters('resourceSuffix'))]"
  },
  "resources": [
    {
      "name": "[variables('dataLakeAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "location": "[variables('location')]",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [
          ],
          "ipRules": [
          ],
          "defaultAction": "Allow"
        },
        "accessTier": "Hot",
        "allowBlobPublicAccess": true,
        "allowSharedKeyAccess": true,
        "isHnsEnabled": true,
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true
      },
      "resources": [
        {
          "type": "containers",
          "apiVersion": "2019-06-01",
          "name": "[variables('imagesContainerName')]",
          "dependsOn": ["[variables('dataLakeAccountName')]"],
          "properties": {
            "publicAccess": "None"
          }
        },
        {
          "type": "containers",
          "apiVersion": "2019-06-01",
          "name": "[variables('exportContainerName')]",
          "dependsOn": ["[variables('dataLakeAccountName')]"],
          "properties": {
            "publicAccess": "None"
          }
        }
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('cosmosDbAccountName')]",
      "apiVersion": "2021-01-15",
      "kind": "GlobalDocumentDB",
      "location": "[variables('location')]",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[variables('location')]"
          }
        ],
        "databaseAccountOfferType": "Standard",
        "enableAutomaticFailover": false,
        "enableFreeTier": false,
        "enableAnalyticalStorage": false,
        "enableMultipleWriteLocations": false,
        "networkAclBypass": "AzureServices",
        "publicNetworkAccess": "Disabled"
      },
      "resources": [
        {
          "name": "[variables('cosmosDbDatabaseName')]",
          "type": "sqlDatabases",
          "apiVersion": "2021-01-15",
          "dependsOn": [
            "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
          ],
          "properties": {
            "resource": {
              "id": "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'), variables('cosmosDbDatabaseName'))]"
            }
          },
          "resources": [
            {
              "type": "containers",
              "name": "[variables('cosmosDbContainerProcessed')]",
              "apiVersion": "2021-01-15",
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), variables('cosmosDbDatabaseName'))]"
              ],
              "properties": {
                "resource": {
                  "id": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', variables('cosmosDbContainerProcessed'))]",
                  "partitionKey": {
                    "paths": ["/licensePlateText"]
                  }
                },
                "options": {
                  "autoscaleSettings": {
                    "maxThroughput": 4000
                  }
                }
              }
            },
            {
              "type": "containers",
              "name": "[variables('cosmosDbContainerManual')]",
              "apiVersion": "2021-01-15",
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), variables('cosmosDbDatabaseName'))]"
              ],
              "properties": {
                "resource": {
                  "id": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', variables('cosmosDbContainerManual'))]",
                  "partitionKey": {
                    "paths": ["/fileName"]
                  }
                },
                "options": {
                  "autoscaleSettings": {
                    "maxThroughput": 4000
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
        "name": "[variables('eventGridTopicName')]",
        "type": "Microsoft.EventGrid/topics",
        "apiVersion": "2020-06-01",
        "location": "[variables('location')]",
        "properties": {
            "inputSchema": "EventGridSchema"
        }
    },
    {
      "name": "[variables('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('vmNetworkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "imageReference": {
            "publisher": "microsoftvisualstudio",
            "offer": "visualstudio2019latest",
            "sku": "vs-2019-comm-latest-ws2019",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNetworkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('vmUsername')]",
          "adminPassword": "[parameters('vmPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVmAgent": true
          }
        }
      },
      "resources": [
        {
          "name": "SetupLabVm",
          "type": "extensions",
          "apiVersion": "2020-06-01",
          "location": "[variables('location')]",
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "protectedSettings": {},
            "typeHandlerVersion": "1.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": ["[variables('vmCustomScriptUri')]"],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('vmCustomScriptFileName'))]"
            }
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "tags": {
            "displayName": "SetupLabVm"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('tollBoothHostingPlanName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('tollBoothHostingPlanName')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('tollBoothFunctionAppName')]",
      "apiVersion": "2020-09-01",
      "location": "[variables('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('tollBoothHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('tollBoothAppInsightsName'))]"
      ],
      "properties": {
        "name": "[variables('tollBoothFunctionAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('tollBoothHostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('Microsoft.Insights/components', variables('tollBoothAppInsightsName')), '2020-02-02-Preview').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('dataLakeAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName')), '2019-06-01').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('dataLakeAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName')), '2019-06-01').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[variables('dataLakeAccountName')]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "10.14.1"
            }
          ]
        },
        "clientAffinityEnabled": false,
        "reserved": false
      },
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('tollBoothEventsHostingPlanName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('tollBoothEventsHostingPlanName')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('tollBoothEventsFunctionAppName')]",
      "apiVersion": "2020-09-01",
      "location": "[variables('location')]",
      "kind": "functionapp",
      "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('tollBoothEventsHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('tollBoothAppInsightsName'))]"
      ],
      "properties": {
        "name": "[variables('tollBoothEventsFunctionAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('tollBoothEventsHostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('Microsoft.Insights/components', variables('tollBoothAppInsightsName')), '2020-02-02-Preview').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('dataLakeAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName')), '2019-06-01').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('dataLakeAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName')), '2019-06-01').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[variables('dataLakeAccountName')]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "10.14.1"
            }
          ]
        },
        "clientAffinityEnabled": false,
        "reserved": false
      },
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
        "name": "[variables('tollBoothAppInsightsName')]",
        "type": "Microsoft.Insights/components",
        "apiVersion": "2020-02-02-Preview",
        "location": "[variables('location')]",
        "kind": "web",
        "properties": {
            "Application_Type": "web"
        }
    },
    {
      "name": "[variables('computerVisionName')]",
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2017-04-18",
      "sku": {
        "name": "S1"
      },
      "location": "[variables('location')]",
      "kind": "ComputerVision",
      "properties": {
        "apiProperties": {
          "statisticsEnabled": false
        }
      }
    },
    {
      "name": "[variables('keyVaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "location": "[variables('location')]",
      "properties": {
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enablePurgeProtection": false,
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
            {
                "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('tollBoothFunctionAppName')), '2019-08-01', 'Full').identity.principalId]",
                "permissions": {
                    "secrets": [
                        "get"
                    ]
                },
                "tenantId": "[subscription().tenantId]"
            }
        ]
      },
      "resources": [
          {
            "type": "secrets",
            "apiVersion": "2019-09-01",
            "name": "[variables('cosmosDbAuthKeySecretName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
            ],
            "properties": {
                "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2021-01-15').primaryMasterKey]"
            }
          },
          {
            "type": "secrets",
            "apiVersion": "2019-09-01",
            "name": "[variables('dataLakeConnectionSecretName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName'))]"
            ],
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('dataLakeAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName')), '2019-06-01').key1)]"
            }
          },
          {
            "type": "secrets",
            "apiVersion": "2019-09-01",
            "name": "[variables('computerVisionSecretName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('computerVisionName'))]"
            ],
            "properties": {
                "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('computerVisionName')), '2017-04-18').key1]"
            }
          },
          {
            "type": "secrets",
            "apiVersion": "2019-09-01",
            "name": "[variables('eventGridTopicKeySecretName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName'))]"
            ],
            "properties": {
                "value": "[listKeys(resourceId('Microsoft.EventGrid/topics', variables('eventGridTopicName')), '2020-06-01').key1]"
            }
          }
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["[variables('addressPrefix')]"]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vmNetworkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/publicIpAddresses/', variables('vmPublicIpAddressName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('vmNetworkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('vmPublicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmNetworkSecurityGroupName'))]"
        }
      }
    },
    {
      "name": "[variables('vmPublicIpAddressName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-06-01",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "name": "[variables('vmNetworkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-06-01",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "priority": 300,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "vmUsername": {
      "type": "string",
      "value": "[parameters('vmUsername')]"
    },
    "CosmosDbEndpoint": {
        "type": "string",
        "value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDbAccountName'))).documentEndpoint]"
    },
    "EventGridTopicEndpoint" : {
        "type": "string",
        "value": "[reference(concat('Microsoft.EventGrid/topics/', variables('eventGridTopicName'))).endpoint]"
    },
    "ComputerVisionEndpoint" : {
        "type": "string",
        "value": "[reference(concat('Microsoft.CognitiveServices/accounts/', variables('computerVisionName'))).endpoint]"
    }
  }
}
