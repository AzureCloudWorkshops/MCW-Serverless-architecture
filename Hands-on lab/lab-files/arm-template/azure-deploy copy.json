{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.3.0.0",
    "parameters": {
        "resourceSuffix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 5,
            "metadata": {
                "description": "Enter a three to five character alpha-numeric string, such as your initials, to ensure unique resource names."
            }
        },
        "vmUsername": {
            "defaultValue": "demouser",
            "type": "string",
            "metadata": {
                "description": "Administrator user name for logging into the Lab Virtual Machine."
            }
        },
        "vmPassword": {
            "defaultValue": "Password.1!!",
            "type": "securestring",
            "minLength": 8,
            "maxLength": 128,
            "metadata": {
                "description": "The password must be between 8 and 128 characters in length and must contain at least one number, one non-alphanumeric character, and one upper or lower case letter. Default value is Password.1!!"
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",

        "dataLakeAccountName": "[concat('tollboothdl', parameters('resourceSuffix'))]",
        "imagesContainerName": "images",

        "cosmosDbAccountName": "[concat('tollbooth-db-', parameters('resourceSuffix'))]",
        "cosmosDbDatabaseName": "LicensePlates",
        "cosmosDbContainerProcessed": "Processed",
        "cosmosDbContainerManual": "NeedsManualReview",

        "vmSize": "Standard_D4s_v3",
        "vmName": "LabVM",

        "vmNetworkSecurityGroupName": "[concat(variables('vmName'), '-nsg')]",
        "vmNetworkInterfaceName": "[concat(variables('vmName'), '-nic')]",
        "vmPublicIpAddressName": "[concat(variables('vmName'), '-ip')]",

        "vmCustomScriptFileName": "configure-labvm.ps1",
        "vmCustomScriptUri": "[concat('https://raw.githubusercontent.com/kylebunting/MCW-Serverless-architecture/master/Hands-on%20lab/lab-files/arm-template/', variables('vmCustomScriptFileName'))]",

        "virtualNetworkName": "[concat(resourceGroup().name, '-vnet')]",
        "addressPrefix": "176.16.0.0/16",
        "subnetName": "default",
        "subnetPrefix": "176.16.0.0/24",

        

        "apiAppName": "[concat('contoso-api-', uniqueString(resourceGroup().id))]",
        "webAppName": "[concat('contoso-web-', uniqueString(resourceGroup().id))]",
        "functionAppName": "[concat('contoso-func-', uniqueString(resourceGroup().id))]",
        "cogServicesName": "[concat('cog-services-', uniqueString(resourceGroup().id))]",
        "keyVaultName": "[concat('contoso-kv-', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "name": "[variables('dataLakeAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "location": "[variables('location')]",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "accessTier": "Hot",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "isHnsEnabled": true,
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true
            },
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2019-06-01",
                    "name": "[concat('default/', variables('imagesContainerName'))]",
                    "dependsOn": [
                        "[variables('dataLakeAccountName')]"
                    ],
                    "properties": {
                        "publicAccess": "None"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "name": "[variables('cosmosDbAccountName')]",
            "apiVersion": "2021-01-15",
            "kind": "GlobalDocumentDB",
            "location": "[variables('location')]",
            "properties": {
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session"
                },
                "locations": [
                    {
                        "locationName": "[variables('location')]"
                    }
                ],
                "databaseAccountOfferType": "Standard",
                "enableAutomaticFailover": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "enableMultipleWriteLocations": false,
                "networkAclBypass": "AzureServices",
                "publicNetworkAccess": "Disabled"
            },
            "resources": [
                {
                    "name": "[concat(variables('cosmosDbAccountName'), '/', variables('cosmosDbDatabaseName'))]",
                    "type": "sqlDatabases",
                    "apiVersion": "2021-01-15",
                    "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
                    ],
                    "properties": {
                        "resource": {
                            "id": "[variables('cosmosDbDatabaseName')]"
                        }
                    }
                } 
            ]
        },
        {
            "name": "[concat(variables('cosmosDbAccountName'), '/', variables('cosmosDbDatabaseName'))]",
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2021-01-15",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosDbDatabaseName')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "name": "[concat(variables('cosmosDbAccountName'), '/', variables('cosmosDbDatabaseName'), '/', variables('cosmosDbContainerProcessed'))]",
            "apiVersion": "2021-01-15",
            "dependsOn": [ 
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), variables('cosmosDbDatabaseName'))]" 
            ],
            "properties":
            {
                "resource":{
                    "id":  "[variables('cosmosDbContainerProcessed')]",
                    "partitionKey": {
                        "paths": [
                            "/licensePlateText"
                        ]
                    }
                },
                "options": {
                    "autoscaleSettings": { 
                        "maxThroughput": 4000 
                    }
                }
            }
        },
                {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "name": "[concat(variables('cosmosDbAccountName'), '/', variables('cosmosDbDatabaseName'), '/', variables('cosmosDbContainerManual'))]",
            "apiVersion": "2021-01-15",
            "dependsOn": [ 
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), variables('cosmosDbDatabaseName'))]" 
            ],
            "properties":
            {
                "resource":{
                    "id":  "[variables('cosmosDbContainerManual')]",
                    "partitionKey": {
                        "paths": [
                            "/fileName"
                        ]
                    }
                },
                "options": {
                    "autoscaleSettings": { 
                        "maxThroughput": 4000 
                    }
                }
            }
        },
        {
            "name": "[variables('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('vmNetworkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "microsoftvisualstudio",
                        "offer": "visualstudio2019latest",
                        "sku": "vs-2019-comm-latest-ws2019",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNetworkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('vmUsername')]",
                    "adminPassword": "[parameters('vmPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                }
            },
            "resources": [
                {
                    "name": "SetupLabVm",
                    "type": "extensions",
                    "apiVersion": "2019-03-01",
                    "location": "[variables('location')]",
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[variables('vmCustomScriptUri')]"
                            ],
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('vmCustomScriptFileName'))]"
                        }
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
                    ],
                    "tags": {
                        "displayName": "SetupLabVm"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "name": "[variables('appServicePlanName')]",
            "apiVersion": "2018-02-01",
            "location": "[variables('location')]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "tags": {
            },
            "properties": {
                "workerSize": 0,
                "workerSizeId": 0,
                "numberOfWorkers": 1
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "name": "[variables('webAppName')]",
            "apiVersion": "2018-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"
            ],
            "properties": {
                "enabled": true,
                "siteConfig": {
                    "connectionStrings": [
                    ],
                    "metadata": [
                        {
                            "name": "CURRENT_STACK",
                            "value": "dotnetcore"
                        }
                    ],
                    "alwaysOn": true
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "name": "[variables('apiAppName')]",
            "apiVersion": "2018-11-01",
            "location": "[variables('location')]",
            "kind": "api",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"
            ],
            "properties": {
                "enabled": true,
                "siteConfig": {
                    "appSettings": []
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "name": "[variables('functionAppName')]",
            "apiVersion": "2018-11-01",
            "location": "[variables('location')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName'))]"
            ],
            "properties": {
                "name": "[variables('functionAppName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('dataLakeAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName')), '2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('dataLakeAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName')), '2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[variables('dataLakeAccountName')]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "10.14.1"
                        }
                    ]
                },
                "clientAffinityEnabled": false,
                "reserved": false
            }
        },
        {
            "name": "[variables('keyVaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2018-02-14",
            "location": "[variables('location')]",
            "properties": {
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": []
            }
        },
        {
            "name": "[variables('cogServicesName')]",
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2017-04-18",
            "sku": {
                "name": "S0"
            },
            "location": "[variables('location')]",
            "kind": "CognitiveServices",
            "properties": {
                "apiProperties": {
                    "statisticsEnabled": false
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2020-06-01",
            "location": "[variables('location')]",
            "dependsOn": [],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vmNetworkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('vmPublicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('vmNetworkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('vmPublicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmNetworkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[variables('vmPublicIpAddressName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-06-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
        },
        {
            "name": "[variables('vmNetworkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-06-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "priority": 300,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "vmUsername": {
            "type": "string",
            "value": "[parameters('vmUsername')]"
        }
    }
}